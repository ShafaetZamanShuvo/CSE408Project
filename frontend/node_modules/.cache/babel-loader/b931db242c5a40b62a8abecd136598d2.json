{"ast":null,"code":"var _jsxFileName = \"/media/shafaet/F/moodle2/CSE408Project/frontend/src/courses/pages/CourseRemoveParticipants.js\";\nimport React, { useState, useContext } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./CourseForm.css\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nconst CourseRemoveParticipants = () => {\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const courseID = useParams().courseID;\n  const [formState, inputHandler] = useForm({\n    moodleID: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n  const history = useHistory();\n\n  const enrolSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      await sendRequest(`http://localhost:5000/api/admin/removeUser/course/${courseID}`, \"PATCH\", JSON.stringify({\n        participants: formState.inputs.moodleID.value //   courseID: courseID,\n\n      }), {\n        \"Content-Type\": \"application/json\"\n      });\n      history.push(\"/\");\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), \" \", \" \", /*#__PURE__*/React.createElement(\"form\", {\n    className: \"course-form\",\n    onSubmit: enrolSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \" \", \" \", \" \", isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 68\n    }\n  }), \" \", \" \", \" \", /*#__PURE__*/React.createElement(Input, {\n    id: \"moodleID\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Student Moodle ID\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid moodle id.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 109\n    }\n  }), \" \", \" \", /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"REMOVE USER \", \" \", \" \"), \" \", \" \"), \" \", \" \");\n};\n\nexport default CourseRemoveParticipants;","map":{"version":3,"names":["React","useState","useContext","useHistory","useParams","useHttpClient","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","ErrorModal","LoadingSpinner","CourseRemoveParticipants","isLoading","error","sendRequest","clearError","courseID","formState","inputHandler","moodleID","value","isValid","history","enrolSubmitHandler","event","preventDefault","JSON","stringify","participants","inputs","push"],"sources":["/media/shafaet/F/moodle2/CSE408Project/frontend/src/courses/pages/CourseRemoveParticipants.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n    VALIDATOR_REQUIRE,\n    VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./CourseForm.css\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nconst CourseRemoveParticipants = () => {\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const courseID = useParams().courseID;\n\n    const [formState, inputHandler] = useForm({\n            moodleID: {\n                value: \"\",\n                isValid: false,\n            },\n        },\n        false\n    );\n\n    const history = useHistory();\n\n    const enrolSubmitHandler = async(event) => {\n        event.preventDefault();\n        try {\n            await sendRequest(\n                `http://localhost:5000/api/admin/removeUser/course/${courseID}`,\n                \"PATCH\",\n                JSON.stringify({\n                    participants: formState.inputs.moodleID.value,\n                    //   courseID: courseID,\n                }), {\n                    \"Content-Type\": \"application/json\",\n                }\n            );\n            history.push(\"/\");\n        } catch (error) {}\n    };\n\n    return ( <\n        React.Fragment >\n        <\n        ErrorModal error = { error }\n        onClear = { clearError }\n        />{\" \"} <\n        form className = \"course-form\"\n        onSubmit = { enrolSubmitHandler } > { \" \" } { isLoading && < LoadingSpinner asOverlay / > } { \" \" } <\n        Input id = \"moodleID\"\n        element = \"input\"\n        type = \"text\"\n        label = \"Student Moodle ID\"\n        validators = {\n            [VALIDATOR_REQUIRE()] }\n        errorText = \"Please enter a valid moodle id.\"\n        onInput = { inputHandler }\n        />{\" \"} <\n        Button type = \"submit\"\n        disabled = {!formState.isValid } >\n        REMOVE USER { \" \" } <\n        /Button>{\" \"} <\n        /form>{\" \"} <\n        /React.Fragment>\n    );\n};\n\nexport default CourseRemoveParticipants;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,SACIC,iBADJ,EAEIC,mBAFJ,QAGO,8BAHP;AAIA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAO,kBAAP;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;;AAEA,MAAMC,wBAAwB,GAAG,MAAM;EACnC,MAAM;IAAEC,SAAF;IAAaC,KAAb;IAAoBC,WAApB;IAAiCC;EAAjC,IAAgDZ,aAAa,EAAnE;EACA,MAAMa,QAAQ,GAAGd,SAAS,GAAGc,QAA7B;EAEA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,OAAO,CAAC;IAClCW,QAAQ,EAAE;MACNC,KAAK,EAAE,EADD;MAENC,OAAO,EAAE;IAFH;EADwB,CAAD,EAMrC,KANqC,CAAzC;EASA,MAAMC,OAAO,GAAGrB,UAAU,EAA1B;;EAEA,MAAMsB,kBAAkB,GAAG,MAAMC,KAAN,IAAgB;IACvCA,KAAK,CAACC,cAAN;;IACA,IAAI;MACA,MAAMX,WAAW,CACZ,qDAAoDE,QAAS,EADjD,EAEb,OAFa,EAGbU,IAAI,CAACC,SAAL,CAAe;QACXC,YAAY,EAAEX,SAAS,CAACY,MAAV,CAAiBV,QAAjB,CAA0BC,KAD7B,CAEX;;MAFW,CAAf,CAHa,EAMT;QACA,gBAAgB;MADhB,CANS,CAAjB;MAUAE,OAAO,CAACQ,IAAR,CAAa,GAAb;IACH,CAZD,CAYE,OAAOjB,KAAP,EAAc,CAAE;EACrB,CAfD;;EAiBA,oBAAS,oBACL,KADK,CACC,QADD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEL,oBACA,UADA;IACW,KAAK,EAAKA,KADrB;IAEA,OAAO,EAAKE,UAFZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFK,EAKF,GALE,oBAKG;IACH,SAAS,EAAG,aADT;IAER,QAAQ,EAAKQ,kBAFL;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,QAE8B,GAF9B,OAEsCX,SAAS,iBAAI,oBAAE,cAAF;IAAiB,SAAS,MAA1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFnD,OAEsF,GAFtF,oBAE4F,oBACpG,KADoG;IAC9F,EAAE,EAAG,UADyF;IAEpG,OAAO,EAAG,OAF0F;IAGpG,IAAI,EAAG,MAH6F;IAIpG,KAAK,EAAG,mBAJ4F;IAKpG,UAAU,EACN,CAACN,iBAAiB,EAAlB,CANgG;IAOpG,SAAS,EAAG,iCAPwF;IAQpG,OAAO,EAAKY,YARwF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAF5F,EAWL,GAXK,oBAWA,oBACR,MADQ;IACD,IAAI,EAAG,QADN;IAER,QAAQ,EAAI,CAACD,SAAS,CAACI,OAFf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAGM,GAHN,MAXA,EAeC,GAfD,MALH,EAqBE,GArBF,MAAT;AAwBH,CAxDD;;AA0DA,eAAeV,wBAAf"},"metadata":{},"sourceType":"module"}