{"ast":null,"code":"var _jsxFileName = \"/media/shafaet/F/moodle2/CSE408Project/frontend/src/shared/components/FormElements/FileUpload.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport \"./FileUpload.css\";\n\nconst FileUpload = props => {\n  const [file, setFile] = useState(); //   const [previewUrl, setPreviewUrl] = useState();\n\n  const [isValid, setIsValid] = useState(false);\n  const filePickerRef = useRef();\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickFileHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    ref: filePickerRef,\n    style: {\n      display: \"none\"\n    },\n    type: \"file\",\n    accept: \".jpg,.png,.jpeg,.pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.txt, .rtf\",\n    onChange: pickedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: `file-upload ${props.center && \"center\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: pickFileHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"PICK FILE \"), \" \"), \" \", !isValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, \" \", props.errorText, \" \"), \" \");\n};\n\nexport default FileUpload;","map":{"version":3,"names":["React","useRef","useState","useEffect","Button","FileUpload","props","file","setFile","isValid","setIsValid","filePickerRef","pickedHandler","event","pickedFile","fileIsValid","target","files","length","onInput","id","pickFileHandler","current","click","display","center","errorText"],"sources":["/media/shafaet/F/moodle2/CSE408Project/frontend/src/shared/components/FormElements/FileUpload.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./FileUpload.css\";\n\nconst FileUpload = (props) => {\n        const [file, setFile] = useState();\n        //   const [previewUrl, setPreviewUrl] = useState();\n        const [isValid, setIsValid] = useState(false);\n\n        const filePickerRef = useRef();\n\n\n        const pickedHandler = (event) => {\n            let pickedFile;\n            let fileIsValid = isValid;\n            if (event.target.files && event.target.files.length === 1) {\n                pickedFile = event.target.files[0];\n                setFile(pickedFile);\n                setIsValid(true);\n                fileIsValid = true;\n            } else {\n                setIsValid(false);\n                fileIsValid = false;\n            }\n            props.onInput(props.id, pickedFile, fileIsValid);\n        };\n\n        const pickFileHandler = () => {\n            filePickerRef.current.click();\n        };\n\n        return ( <\n            div className = \"form-control\" >\n            <\n            input id = { props.id }\n            ref = { filePickerRef }\n            style = {\n                { display: \"none\" } }\n            type = \"file\"\n            accept = \".jpg,.png,.jpeg,.pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.txt, .rtf\"\n            onChange = { pickedHandler }\n            /> <\n            div className = { `file-upload ${props.center && \"center\"}` } >\n            <\n            Button type = \"button\"\n            onClick = { pickFileHandler } >\n            PICK FILE <\n            /Button> <\n            /div> {\n                !isValid && < p > { props.errorText } < /p>} <\n                    /div>\n            );\n        };\n\n        export default FileUpload;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EACtB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC,CADsB,CAEtB;;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;EAEA,MAAMS,aAAa,GAAGV,MAAM,EAA5B;;EAGA,MAAMW,aAAa,GAAIC,KAAD,IAAW;IAC7B,IAAIC,UAAJ;IACA,IAAIC,WAAW,GAAGN,OAAlB;;IACA,IAAII,KAAK,CAACG,MAAN,CAAaC,KAAb,IAAsBJ,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,KAA8B,CAAxD,EAA2D;MACvDJ,UAAU,GAAGD,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;MACAT,OAAO,CAACM,UAAD,CAAP;MACAJ,UAAU,CAAC,IAAD,CAAV;MACAK,WAAW,GAAG,IAAd;IACH,CALD,MAKO;MACHL,UAAU,CAAC,KAAD,CAAV;MACAK,WAAW,GAAG,KAAd;IACH;;IACDT,KAAK,CAACa,OAAN,CAAcb,KAAK,CAACc,EAApB,EAAwBN,UAAxB,EAAoCC,WAApC;EACH,CAbD;;EAeA,MAAMM,eAAe,GAAG,MAAM;IAC1BV,aAAa,CAACW,OAAd,CAAsBC,KAAtB;EACH,CAFD;;EAIA,oBAAS;IACD,SAAS,EAAG,cADX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEL;IACM,EAAE,EAAKjB,KAAK,CAACc,EADnB;IAEA,GAAG,EAAKT,aAFR;IAGA,KAAK,EACD;MAAEa,OAAO,EAAE;IAAX,CAJJ;IAKA,IAAI,EAAG,MALP;IAMA,MAAM,EAAG,kEANT;IAOA,QAAQ,EAAKZ,aAPb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFK,oBAUF;IACC,SAAS,EAAM,eAAcN,KAAK,CAACmB,MAAN,IAAgB,QAAS,EADvD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEH,oBACA,MADA;IACO,IAAI,EAAG,QADd;IAEA,OAAO,EAAKJ,eAFZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAFG,MAVE,OAkBD,CAACZ,OAAD,iBAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,QAAQH,KAAK,CAACoB,SAAd,MAlBX,MAAT;AAqBC,CAhDT;;AAkDQ,eAAerB,UAAf"},"metadata":{},"sourceType":"module"}