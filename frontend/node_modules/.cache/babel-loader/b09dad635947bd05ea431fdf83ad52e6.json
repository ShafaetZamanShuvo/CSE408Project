{"ast":null,"code":"var _jsxFileName = \"/home/istiak/Desktop/Project 408/Final/CSE408Project/frontend/src/sessions/pages/SessionCreateCourse.js\";\nimport React, { useState, useContext } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./SessionForm.css\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst SessionCreateCourse = () => {\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const sessionID = useParams().sessionID;\n  const [formState, inputHandler] = useForm({\n    courseID: {\n      value: \"\",\n      isValid: false\n    },\n    courseTitle: {\n      value: \"\",\n      isValid: false\n    },\n    courseDescription: {\n      value: \"\",\n      isValid: false\n    },\n    courseCreditHour: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n  const history = useHistory();\n\n  const courseSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      await sendRequest(`http://localhost:5000/api/admin/create-course/${sessionID}`, \"POST\", JSON.stringify({\n        courseID: formState.inputs.courseID.value,\n        sessionID: sessionID,\n        courseTitle: formState.inputs.courseTitle.value,\n        courseDescription: formState.inputs.courseDescription.value,\n        courseCreditHour: formState.inputs.courseCreditHour.value\n      }), {\n        \"Content-Type\": \"application/json\"\n      });\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), !isLoading && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"session-form\",\n    onSubmit: courseSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"courseID\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Course ID\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid course id.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"courseTitle\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Course Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid course title.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"courseDescription\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Course Description\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid course desc.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"courseCreditHour\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Course Credit Hour\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid course credit hour.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"ADD COURSE\")));\n};\n\nexport default SessionCreateCourse;","map":{"version":3,"names":["React","useState","useContext","useHistory","useParams","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","ErrorModal","LoadingSpinner","useHttpClient","SessionCreateCourse","isLoading","error","sendRequest","clearError","sessionID","formState","inputHandler","courseID","value","isValid","courseTitle","courseDescription","courseCreditHour","history","courseSubmitHandler","event","preventDefault","JSON","stringify","inputs"],"sources":["/home/istiak/Desktop/Project 408/Final/CSE408Project/frontend/src/sessions/pages/SessionCreateCourse.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./SessionForm.css\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst SessionCreateCourse = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const sessionID = useParams().sessionID;\n\n  const [formState, inputHandler] = useForm(\n    {\n      courseID: {\n        value: \"\",\n        isValid: false,\n      },\n      courseTitle: {\n        value: \"\",\n        isValid: false,\n      },\n      courseDescription: {\n        value: \"\",\n        isValid: false,\n      },\n      courseCreditHour: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const courseSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `http://localhost:5000/api/admin/create-course/${sessionID}`,\n        \"POST\",\n        JSON.stringify({\n          courseID: formState.inputs.courseID.value,\n          sessionID: sessionID,\n          courseTitle: formState.inputs.courseTitle.value,\n          courseDescription: formState.inputs.courseDescription.value,\n          courseCreditHour: formState.inputs.courseCreditHour.value,\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n        }\n      );\n    } catch (error) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && (\n        <form className=\"session-form\" onSubmit={courseSubmitHandler}>\n          <Input\n            id=\"courseID\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Course ID\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid course id.\"\n            onInput={inputHandler}\n          />\n\n          <Input\n            id=\"courseTitle\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Course Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid course title.\"\n            onInput={inputHandler}\n          />\n\n          <Input\n            id=\"courseDescription\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Course Description\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid course desc.\"\n            onInput={inputHandler}\n          />\n\n          <Input\n            id=\"courseCreditHour\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Course Credit Hour\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid course credit hour.\"\n            onInput={inputHandler}\n          />\n\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            ADD COURSE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default SessionCreateCourse;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}