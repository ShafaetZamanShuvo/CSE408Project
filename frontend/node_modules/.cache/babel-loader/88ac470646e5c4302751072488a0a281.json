{"ast":null,"code":"var _jsxFileName = \"/home/istiak/Desktop/408/CSE408Project/frontend/src/sessions/pages/Sessions.js\";\nimport React, { useEffect, useState } from \"react\";\nimport SessionList from \"../components/SessionList\"; // import UsersList from '../components/UsersList';\n\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst Sessions = () => {\n  // const SESSIONS = [\n  //   {\n  //     sessionID: \"Jan 2020\",\n  //     startDate: \"2020-01-01\",\n  //     endDate: \"2020-01-01\",\n  //     courses: [],\n  //   },\n  // ];\n  // return <SessionList items={SESSIONS} />;\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedSessions, setLoadedSessions] = useState();\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\"http://localhost:5000/get/sessions\");\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n\n    fetchUsers();\n  }, [sendRequest]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })), !isLoading && loadedSessions && /*#__PURE__*/React.createElement(SessionList, {\n    items: loadedSessions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 40\n    }\n  }));\n};\n\nexport default Sessions;","map":{"version":3,"names":["React","useEffect","useState","SessionList","ErrorModal","LoadingSpinner","useHttpClient","Sessions","isLoading","error","sendRequest","clearError","loadedSessions","setLoadedSessions","fetchUsers","responseData","setLoadedUsers","users","err"],"sources":["/home/istiak/Desktop/408/CSE408Project/frontend/src/sessions/pages/Sessions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport SessionList from \"../components/SessionList\";\n// import UsersList from '../components/UsersList';\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst Sessions = () => {\n  // const SESSIONS = [\n  //   {\n  //     sessionID: \"Jan 2020\",\n  //     startDate: \"2020-01-01\",\n  //     endDate: \"2020-01-01\",\n  //     courses: [],\n  //   },\n  // ];\n  // return <SessionList items={SESSIONS} />;\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedSessions, setLoadedSessions] = useState();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const responseData = await sendRequest(\n          \"http://localhost:5000/get/sessions\"\n        );\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {}\n    };\n    fetchUsers();\n  }, [sendRequest]);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedSessions && <SessionList items={loadedSessions} />}\n    </React.Fragment>\n  );\n};\n\nexport default Sessions;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,WAAP,MAAwB,2BAAxB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,SAASC,aAAT,QAA8B,8BAA9B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EACrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA,MAAM;IAAEC,SAAF;IAAaC,KAAb;IAAoBC,WAApB;IAAiCC;EAAjC,IAAgDL,aAAa,EAAnE;EACA,MAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,EAApD;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,YAAY;MAC7B,IAAI;QACF,MAAMC,YAAY,GAAG,MAAML,WAAW,CACpC,oCADoC,CAAtC;QAIAM,cAAc,CAACD,YAAY,CAACE,KAAd,CAAd;MACD,CAND,CAME,OAAOC,GAAP,EAAY,CAAE;IACjB,CARD;;IASAJ,UAAU;EACX,CAXQ,EAWN,CAACJ,WAAD,CAXM,CAAT;EAaA,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,UAAD;IAAY,KAAK,EAAED,KAAnB;IAA0B,OAAO,EAAEE,UAAnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAEGH,SAAS,iBACR;IAAK,SAAS,EAAC,QAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,cAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAHJ,EAOG,CAACA,SAAD,IAAcI,cAAd,iBAAgC,oBAAC,WAAD;IAAa,KAAK,EAAEA,cAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPnC,CADF;AAWD,CAtCD;;AAwCA,eAAeL,QAAf"},"metadata":{},"sourceType":"module"}