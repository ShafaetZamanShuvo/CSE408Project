{"ast":null,"code":"var _jsxFileName = \"/media/shafaet/F/moodle2/CSE408Project/frontend/src/user/pages/NewUser.js\";\n// import React from \"react\";\nimport React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./UserForm.css\";\n\nconst NewUser = () => {\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler] = useForm({\n    moodle_id: {\n      value: \"\",\n      isValid: false\n    },\n    user_name: {\n      value: \"\",\n      isValid: false\n    },\n    email_id: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    },\n    role: {\n      value: \"\",\n      isValid: false\n    } // title: {\n    //   value: \"\",\n    //   isValid: false,\n    // },\n    // description: {\n    //   value: \"\",\n    //   isValid: false,\n    // },\n    // address: {\n    //   value: \"\",\n    //   isValid: false,\n    // },\n\n  }, false);\n  const history = useHistory();\n\n  const userSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      await sendRequest(\"http://localhost:5000/api/admin/create/user\", \"POST\", JSON.stringify({\n        moodleID: formState.inputs.moodle_id.value,\n        name: formState.inputs.user_name.value,\n        email: formState.inputs.email_id.value,\n        // password: formState.inputs.phone_num.value,\n        // date_of_birth: formState.inputs.date_of_birth.value,\n        // address: formState.inputs.address.value,\n        password: formState.inputs.password.value,\n        role: formState.inputs.role.value\n      }), {\n        \"Content-Type\": \"application/json\"\n      });\n      history.push(\"/\");\n    } catch (error) {} // console.log(formState.inputs); // send this to the backend!\n\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"form\", {\n    className: \"user-form\",\n    onSubmit: userSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }\n  }, \" \", isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 59\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Input, {\n    id: \"moodle_id\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Moodle ID\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid id.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 92\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Input, {\n    id: \"user_name\",\n    element: \"input\",\n    type: \"text\",\n    label: \"User Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid name.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Input, {\n    id: \"email_id\",\n    element: \"input\",\n    type: \"email\",\n    label: \"Email ID\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid email.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }\n  }), \" \", \" \", \" \", \" \", /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    element: \"input\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(6)],\n    errorText: \"Please enter a valid password.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Input, {\n    id: \"role\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Role\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid role.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }), \" \", \" \", \" \", /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, \"ADD USER \"), \" \"), \" \");\n};\n\nexport default NewUser;","map":{"version":3,"names":["React","useState","useContext","useHistory","ErrorModal","LoadingSpinner","useHttpClient","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","NewUser","isLoading","error","sendRequest","clearError","formState","inputHandler","moodle_id","value","isValid","user_name","email_id","password","role","history","userSubmitHandler","event","preventDefault","JSON","stringify","moodleID","inputs","name","email","push"],"sources":["/media/shafaet/F/moodle2/CSE408Project/frontend/src/user/pages/NewUser.js"],"sourcesContent":["// import React from \"react\";\nimport React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n    VALIDATOR_REQUIRE,\n    VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./UserForm.css\";\n\nconst NewUser = () => {\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n    const [formState, inputHandler] = useForm({\n            moodle_id: {\n                value: \"\",\n                isValid: false,\n            },\n            user_name: {\n                value: \"\",\n                isValid: false,\n            },\n            email_id: {\n                value: \"\",\n                isValid: false,\n            },\n\n            password: {\n                value: \"\",\n                isValid: false,\n            },\n            role: {\n                value: \"\",\n                isValid: false,\n            },\n            // title: {\n            //   value: \"\",\n            //   isValid: false,\n            // },\n            // description: {\n            //   value: \"\",\n            //   isValid: false,\n            // },\n            // address: {\n            //   value: \"\",\n            //   isValid: false,\n            // },\n        },\n        false\n    );\n\n    const history = useHistory();\n\n    const userSubmitHandler = async(event) => {\n        event.preventDefault();\n        try {\n            await sendRequest(\n                \"http://localhost:5000/api/admin/create/user\",\n                \"POST\",\n                JSON.stringify({\n                    moodleID: formState.inputs.moodle_id.value,\n                    name: formState.inputs.user_name.value,\n                    email: formState.inputs.email_id.value,\n                    // password: formState.inputs.phone_num.value,\n                    // date_of_birth: formState.inputs.date_of_birth.value,\n                    // address: formState.inputs.address.value,\n                    password: formState.inputs.password.value,\n                    role: formState.inputs.role.value,\n                }), {\n                    \"Content-Type\": \"application/json\",\n                }\n            );\n            history.push(\"/\");\n        } catch (error) {}\n        // console.log(formState.inputs); // send this to the backend!\n    };\n\n    return ( <\n        React.Fragment >\n        <\n        ErrorModal error = { error }\n        onClear = { clearError }\n        /> <\n        form className = \"user-form\"\n        onSubmit = { userSubmitHandler } > { isLoading && < LoadingSpinner asOverlay / > } <\n        Input id = \"moodle_id\"\n        element = \"input\"\n        type = \"text\"\n        label = \"Moodle ID\"\n        validators = {\n            [VALIDATOR_REQUIRE()] }\n        errorText = \"Please enter a valid id.\"\n        onInput = { inputHandler }\n        /> <\n        Input id = \"user_name\"\n        element = \"input\"\n        type = \"text\"\n        label = \"User Name\"\n        validators = {\n            [VALIDATOR_REQUIRE()] }\n        errorText = \"Please enter a valid name.\"\n        onInput = { inputHandler }\n        /> <\n        Input id = \"email_id\"\n        element = \"input\"\n        type = \"email\"\n        label = \"Email ID\"\n        validators = {\n            [VALIDATOR_REQUIRE()] }\n        errorText = \"Please enter a valid email.\"\n        onInput = { inputHandler }\n        /> {\n            /* <Input\n                      id=\"phone_num\"\n                      element=\"input\"\n                      type=\"text\"\n                      label=\"Phone Number\"\n                      validators={[VALIDATOR_REQUIRE()]}\n                      errorText=\"Please enter a valid phone number.\"\n                      onInput={inputHandler}\n                    /> */\n        } {\n            /* <Input\n                      id=\"date_of_birth\"\n                      element=\"input\"\n                      type=\"text\"\n                      label=\"Date of Birth\"\n                      validators={[VALIDATOR_REQUIRE()]}\n                      errorText=\"Please enter a valid date of birth.\"\n                      onInput={inputHandler}\n                    /> */\n        } {\n            /* <Input\n                      id=\"address\"\n                      element=\"input\"\n                      type=\"text\"\n                      label=\"Address\"\n                      validators={[VALIDATOR_REQUIRE()]}\n                      errorText=\"Please enter a valid address.\"\n                      onInput={inputHandler}\n                    /> */\n        } <\n        Input id = \"password\"\n        element = \"input\"\n        type = \"password\"\n        label = \"Password\"\n        validators = {\n            [VALIDATOR_MINLENGTH(6)] }\n        errorText = \"Please enter a valid password.\"\n        onInput = { inputHandler }\n        />\n\n        {\n            /* <Input\n                        name=\"role\"\n                        id=\"role\"\n                        element=\"input\"\n                        // type=\"text\"\n                        type=\"radio\"\n                        value=\"student\"\n                        label=\"Role\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter a valid role.\"\n                        initialValue=\"student/teacher\"\n                        onInput={inputHandler}\n                      />\n                      student\n                      <Input\n                        name=\"role\"\n                        id=\"role\"\n                        element=\"input\"\n                        // type=\"text\"\n                        type=\"radio\"\n                        value=\"teacher\"\n                        label=\"Role\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter a valid role.\"\n                        initialValue=\"student/teacher\"\n                        onInput={inputHandler}\n                      />\n                      teacher */\n        } <\n        Input id = \"role\"\n        element = \"input\"\n        type = \"text\"\n        label = \"Role\"\n        validators = {\n            [VALIDATOR_REQUIRE()] }\n        errorText = \"Please enter a valid role.\"\n        onInput = { inputHandler } >\n        < /Input> {\n            /* <option value=\"student\">Student</option>\n                      <option value=\"teacher\">Teacher</option> */\n        } { /* </Input> */ }\n\n        {\n            /* <select value=\"role\" id=\"role\" onChange={inputHandler}>\n                      <option value=\"grapefruit\">Grapefruit</option>\n                      <option value=\"lime\">Lime</option>\n                      <option value=\"coconut\">Coconut</option>\n                      <option value=\"mango\">Mango</option>\n                    </select> */\n        }\n\n        {\n            /* <Input\n                    id=\"description\"\n                    element=\"textarea\"\n                    label=\"Description\"\n                    // validators={[VALIDATOR_REQUIRE()]}\n                    validators={[VALIDATOR_MINLENGTH(5)]}\n                    errorText=\"Please enter a valid description (at least 5 characters).\"\n                    onInput={inputHandler}\n                  />\n                  <Input\n                    id=\"address\"\n                    element=\"input\"\n                    label=\"Address\"\n                    validators={[VALIDATOR_REQUIRE()]}\n                    errorText=\"Please enter a valid address.\"\n                    onInput={inputHandler}\n                  /> */\n        } <\n        Button type = \"submit\"\n        disabled = {!formState.isValid } >\n        ADD USER <\n        /Button> <\n        /form> <\n        /React.Fragment>\n    );\n};\n\nexport default NewUser;"],"mappings":"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"},"metadata":{},"sourceType":"module"}