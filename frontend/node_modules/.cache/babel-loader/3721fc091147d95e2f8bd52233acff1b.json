{"ast":null,"code":"var _jsxFileName = \"/home/istiak/Desktop/408/CSE408Project/frontend/src/courses/pages/NewCourse.js\";\nimport React, { useState, useContext } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./CourseForm.css\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nconst NewCourse = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [formState, inputHandler] = useForm({\n    course_id: {\n      value: \"\",\n      isValid: false\n    },\n    course_title: {\n      value: \"\",\n      isValid: false\n    },\n    credit_hour: {\n      value: \"\",\n      isValid: false\n    } // title: {\n    //   value: \"\",\n    //   isValid: false,\n    // },\n    // description: {\n    //   value: \"\",\n    //   isValid: false,\n    // },\n    // address: {\n    //   value: \"\",\n    //   isValid: false,\n    // },\n\n  }, false); // const courseSubmitHandler = (event) => {\n  //   event.preventDefault();\n  //   console.log(formState.inputs); // send this to the backend!\n  // };\n\n  const courseSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      setIsLoading(true);\n      const response = await fetch(\"http://localhost:5000/api/admin/create-course\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          courseID: formState.inputs.courseID.value,\n          sessionID: formState.inputs.sessionID.value,\n          courseTitle: formState.inputs.courseTitle.value,\n          courseDescription: formState.inputs.courseDescription.value,\n          courseCreditHour: formState.inputs.courseCreditHour.value,\n          participants: formState.inputs.participants.value\n        })\n      });\n      const responseData = await response.json();\n\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n\n      console.log(responseData);\n      setIsLoading(false);\n    } catch (error) {} // console.log(formState.inputs); // send this to the backend!\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"course-form\",\n    onSubmit: courseSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"course_id\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Course ID\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid course id.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"course_title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Course Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"credit_hour\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Credit Hour\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid course hour.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, \"ADD COURSE\"));\n};\n\nexport default NewCourse;","map":{"version":3,"names":["React","useState","useContext","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","ErrorModal","LoadingSpinner","NewCourse","isLoading","setIsLoading","error","setError","formState","inputHandler","course_id","value","isValid","course_title","credit_hour","courseSubmitHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","courseID","inputs","sessionID","courseTitle","courseDescription","courseCreditHour","participants","responseData","json","ok","Error","message","console","log"],"sources":["/home/istiak/Desktop/408/CSE408Project/frontend/src/courses/pages/NewCourse.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./CourseForm.css\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nconst NewCourse = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const [formState, inputHandler] = useForm(\n    {\n      course_id: {\n        value: \"\",\n        isValid: false,\n      },\n      course_title: {\n        value: \"\",\n        isValid: false,\n      },\n      credit_hour: {\n        value: \"\",\n        isValid: false,\n      },\n      // title: {\n      //   value: \"\",\n      //   isValid: false,\n      // },\n      // description: {\n      //   value: \"\",\n      //   isValid: false,\n      // },\n      // address: {\n      //   value: \"\",\n      //   isValid: false,\n      // },\n    },\n    false\n  );\n\n  // const courseSubmitHandler = (event) => {\n  //   event.preventDefault();\n  //   console.log(formState.inputs); // send this to the backend!\n  // };\n\n  const courseSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      setIsLoading(true);\n      const response = await fetch(\n        \"http://localhost:5000/api/admin/create-course\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            courseID: formState.inputs.courseID.value,\n            sessionID: formState.inputs.sessionID.value,\n            courseTitle: formState.inputs.courseTitle.value,\n            courseDescription: formState.inputs.courseDescription.value,\n            courseCreditHour: formState.inputs.courseCreditHour.value,\n            participants: formState.inputs.participants.value,\n          }),\n        }\n      );\n\n      const responseData = await response.json();\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n      console.log(responseData);\n      setIsLoading(false);\n    } catch (error) {}\n    // console.log(formState.inputs); // send this to the backend!\n  };\n\n  return (\n    <form className=\"course-form\" onSubmit={courseSubmitHandler}>\n      <Input\n        id=\"course_id\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Course ID\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid course id.\"\n        onInput={inputHandler}\n      />\n\n      <Input\n        id=\"course_title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Course Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n      />\n\n      <Input\n        id=\"credit_hour\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Credit Hour\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid course hour.\"\n        onInput={inputHandler}\n      />\n      {/* <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"address\"\n        element=\"input\"\n        label=\"Address\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid address.\"\n        onInput={inputHandler}\n      /> */}\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        ADD COURSE\n      </Button>\n    </form>\n  );\n};\n\nexport default NewCourse;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}