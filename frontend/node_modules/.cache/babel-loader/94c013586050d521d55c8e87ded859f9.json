{"ast":null,"code":"var _jsxFileName = \"/media/shafaet/F/moodle2/CSE408Project/frontend/src/courses/pages/DeleteCourse.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport DropDownSelect from \"../../shared/components/FormElements/DropDownSelect\";\nimport { useHistory } from \"react-router-dom\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./DeleteCourse.css\";\nlet selectCourses, seletSession;\n\nconst DeleteCourse = () => {\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedCourses, setLoadedCourses] = useState();\n  const history = useHistory();\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const responseData = await sendRequest(\"http://localhost:5000/api/courses\");\n        selectCourses = responseData.courses.map(crs => ({\n          value: crs._id,\n          label: crs.courseID + \" : \" + crs.sessionName\n        }));\n        console.log(selectCourses);\n        setLoadedCourses(responseData.courses);\n      } catch (err) {}\n    };\n\n    fetchCourses();\n  }, [sendRequest]);\n  const [formState, inputHandler] = useForm({\n    course_id: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const courseSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      await sendRequest(`http://localhost:5000/api/admin/delete/course/${formState.inputs.course_id.value}`, \"DELETE\");\n      history.push(\"/\");\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"course-form\",\n    onSubmit: courseSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, !isLoading && loadedCourses && /*#__PURE__*/React.createElement(DropDownSelect, {\n    id: \"course_id\",\n    label: \"Course ID\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid course id.\",\n    onInput: inputHandler,\n    options: selectCourses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"DELETE COURSE\"));\n};\n\nexport default DeleteCourse;","map":{"version":3,"names":["React","useEffect","useState","ErrorModal","LoadingSpinner","Input","Button","useHttpClient","DropDownSelect","useHistory","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","selectCourses","seletSession","DeleteCourse","isLoading","error","sendRequest","clearError","loadedCourses","setLoadedCourses","history","fetchCourses","responseData","courses","map","crs","value","_id","label","courseID","sessionName","console","log","err","formState","inputHandler","course_id","isValid","courseSubmitHandler","event","preventDefault","inputs","push"],"sources":["/media/shafaet/F/moodle2/CSE408Project/frontend/src/courses/pages/DeleteCourse.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport DropDownSelect from \"../../shared/components/FormElements/DropDownSelect\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./DeleteCourse.css\";\n\nlet selectCourses, seletSession;\n\nconst DeleteCourse = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedCourses, setLoadedCourses] = useState();\n  const history = useHistory();\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const responseData = await sendRequest(\n          \"http://localhost:5000/api/courses\"\n        );\n        selectCourses = responseData.courses.map((crs) => ({\n          value: crs._id,\n          label: crs.courseID + \" : \" + crs.sessionName,\n        }));\n        console.log(selectCourses);\n        setLoadedCourses(responseData.courses);\n      } catch (err) {}\n    };\n    fetchCourses();\n  }, [sendRequest]);\n\n  const [formState, inputHandler] = useForm(\n    {\n      course_id: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const courseSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `http://localhost:5000/api/admin/delete/course/${formState.inputs.course_id.value}`,\n        \"DELETE\"\n      );\n      history.push(\"/\");\n    } catch (error) {}\n  };\n\n  return (\n    <form className=\"course-form\" onSubmit={courseSubmitHandler}>\n      {!isLoading && loadedCourses && (\n        <DropDownSelect\n          id=\"course_id\"\n          label=\"Course ID\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid course id.\"\n          onInput={inputHandler}\n          options={selectCourses}\n        />\n      )}\n\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        DELETE COURSE\n      </Button>\n    </form>\n  );\n};\n\nexport default DeleteCourse;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,OAAOC,cAAP,MAA2B,qDAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SACEC,iBADF,EAEEC,mBAFF,QAGO,8BAHP;AAIA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAO,oBAAP;AAEA,IAAIC,aAAJ,EAAmBC,YAAnB;;AAEA,MAAMC,YAAY,GAAG,MAAM;EACzB,MAAM;IAAEC,SAAF;IAAaC,KAAb;IAAoBC,WAApB;IAAiCC;EAAjC,IAAgDZ,aAAa,EAAnE;EACA,MAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,EAAlD;EACA,MAAMoB,OAAO,GAAGb,UAAU,EAA1B;EACAR,SAAS,CAAC,MAAM;IACd,MAAMsB,YAAY,GAAG,YAAY;MAC/B,IAAI;QACF,MAAMC,YAAY,GAAG,MAAMN,WAAW,CACpC,mCADoC,CAAtC;QAGAL,aAAa,GAAGW,YAAY,CAACC,OAAb,CAAqBC,GAArB,CAA0BC,GAAD,KAAU;UACjDC,KAAK,EAAED,GAAG,CAACE,GADsC;UAEjDC,KAAK,EAAEH,GAAG,CAACI,QAAJ,GAAe,KAAf,GAAuBJ,GAAG,CAACK;QAFe,CAAV,CAAzB,CAAhB;QAIAC,OAAO,CAACC,GAAR,CAAYrB,aAAZ;QACAQ,gBAAgB,CAACG,YAAY,CAACC,OAAd,CAAhB;MACD,CAVD,CAUE,OAAOU,GAAP,EAAY,CAAE;IACjB,CAZD;;IAaAZ,YAAY;EACb,CAfQ,EAeN,CAACL,WAAD,CAfM,CAAT;EAiBA,MAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BzB,OAAO,CACvC;IACE0B,SAAS,EAAE;MACTV,KAAK,EAAE,EADE;MAETW,OAAO,EAAE;IAFA;EADb,CADuC,EAOvC,KAPuC,CAAzC;;EAUA,MAAMC,mBAAmB,GAAG,MAAOC,KAAP,IAAiB;IAC3CA,KAAK,CAACC,cAAN;;IACA,IAAI;MACF,MAAMxB,WAAW,CACd,iDAAgDkB,SAAS,CAACO,MAAV,CAAiBL,SAAjB,CAA2BV,KAAM,EADnE,EAEf,QAFe,CAAjB;MAIAN,OAAO,CAACsB,IAAR,CAAa,GAAb;IACD,CAND,CAME,OAAO3B,KAAP,EAAc,CAAE;EACnB,CATD;;EAWA,oBACE;IAAM,SAAS,EAAC,aAAhB;IAA8B,QAAQ,EAAEuB,mBAAxC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAACxB,SAAD,IAAcI,aAAd,iBACC,oBAAC,cAAD;IACE,EAAE,EAAC,WADL;IAEE,KAAK,EAAC,WAFR;IAGE,UAAU,EAAE,CAACV,iBAAiB,EAAlB,CAHd;IAIE,SAAS,EAAC,iCAJZ;IAKE,OAAO,EAAE2B,YALX;IAME,OAAO,EAAExB,aANX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,eAYE,oBAAC,MAAD;IAAQ,IAAI,EAAC,QAAb;IAAsB,QAAQ,EAAE,CAACuB,SAAS,CAACG,OAA3C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAZF,CADF;AAkBD,CA5DD;;AA8DA,eAAexB,YAAf"},"metadata":{},"sourceType":"module"}