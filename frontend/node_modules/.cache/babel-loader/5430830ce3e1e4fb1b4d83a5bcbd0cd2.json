{"ast":null,"code":"var _jsxFileName = \"/home/istiak/Desktop/Project 408/Final/CSE408Project/frontend/src/user/pages/Auth.js\";\nimport React, { useState, useContext } from \"react\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext); // const [isLoginMode, setIsLoginMode] = useState(true);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState();\n\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    // if (!isLoginMode) {\n    //   setFormData(\n    //     {\n    //       ...formState.inputs,\n    //       name: undefined,\n    //     },\n    //     formState.inputs.email.isValid && formState.inputs.password.isValid\n    //   );\n    // } else {\n    setFormData({ ...formState.inputs,\n      name: {\n        value: \"\",\n        isValid: false\n      }\n    }, false); // }\n    // setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault(); // if (isLoginMode) {\n    // } else {\n\n    try {\n      setIsLoading(true);\n      await sendRequest(\"http://localhost:5000/api/admin/login\", \"POST\", JSON.stringify({\n        email: formState.inputs.email.value,\n        password: formState.inputs.password.value\n      }), {\n        \"Content-Type\": \"application/json\"\n      });\n    } catch (error) {} // }\n\n  }; // const authSubmitHandler = (event) => {\n  //   event.preventDefault();\n  //   console.log(formState.inputs);\n  //   auth.login();\n  // };\n\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Login Required\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid password, at least 5 characters.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, isLoginMode ? \"LOGIN\" : \"SIGNUP\")));\n};\n\nexport default Auth;","map":{"version":3,"names":["React","useState","useContext","useHttpClient","useHistory","useParams","Card","Input","Button","ErrorModal","LoadingSpinner","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","Auth","auth","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","authSubmitHandler","event","preventDefault","setIsLoading","JSON","stringify","isLoginMode"],"sources":["/home/istiak/Desktop/Project 408/Final/CSE408Project/frontend/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  // const [isLoginMode, setIsLoginMode] = useState(true);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    // if (!isLoginMode) {\n    //   setFormData(\n    //     {\n    //       ...formState.inputs,\n    //       name: undefined,\n    //     },\n    //     formState.inputs.email.isValid && formState.inputs.password.isValid\n    //   );\n    // } else {\n    setFormData(\n      {\n        ...formState.inputs,\n        name: {\n          value: \"\",\n          isValid: false,\n        },\n      },\n      false\n    );\n    // }\n    // setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n    // if (isLoginMode) {\n    // } else {\n    try {\n      setIsLoading(true);\n      await sendRequest(\n        \"http://localhost:5000/api/admin/login\",\n        \"POST\",\n        JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value,\n        }),\n        {\n          \"Content-Type\": \"application/json\",\n        }\n      );\n    } catch (error) {}\n    // }\n  };\n\n  // const authSubmitHandler = (event) => {\n  //   event.preventDefault();\n  //   console.log(formState.inputs);\n  //   auth.login();\n  // };\n\n  return (\n    <Card className=\"authentication\">\n      <h2>Login Required</h2>\n      <hr />\n      <form onSubmit={authSubmitHandler}>\n        {!isLoginMode && (\n          <Input\n            element=\"input\"\n            id=\"name\"\n            type=\"text\"\n            label=\"Your Name\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a name.\"\n            onInput={inputHandler}\n          />\n        )}\n        <Input\n          element=\"input\"\n          id=\"email\"\n          type=\"email\"\n          label=\"E-Mail\"\n          validators={[VALIDATOR_EMAIL()]}\n          errorText=\"Please enter a valid email address.\"\n          onInput={inputHandler}\n        />\n        <Input\n          element=\"input\"\n          id=\"password\"\n          type=\"password\"\n          label=\"Password\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid password, at least 5 characters.\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n        </Button>\n      </form>\n      {/* <Button inverse onClick={switchModeHandler}>\n        SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n      </Button> */}\n    </Card>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}