{"ast":null,"code":"var _jsxFileName = \"/media/shafaet/F/moodle2/CSE408Project/frontend/src/courses/pages/CourseMaterialUpload.js\";\nimport React, { useState, useContext } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport FileUpload from \"../../shared/components/FormElements/FileUpload\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./CourseForm.css\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport axios from \"axios\"; // const CourseMaterialUpload = () => {\n//   const { isLoading, error, sendRequest, clearError } = useHttpClient();\n//   const courseID = useParams().courseID;\n//   const [formState, inputHandler] = useForm(\n//     {\n//       file: {\n//         value: null,\n//         isValid: false,\n//       },\n//     },\n//     false\n//   );\n//   const history = useHistory();\n//   const courseMatrialUploadHandler = async (event) => {\n//     event.preventDefault();\n//     const formData = new FormData();\n//     formData.append(\"file\", formState.inputs.file.value);\n//     formData.append(\"course\", courseID);\n//     // formData.append(\"uploader\", 123);\n//     console.log(formData);\n//     try {\n//       await sendRequest(\n//         `http://localhost:5000/api/courses/upload-course-materials/${courseID}`,\n//         \"POST\",\n//         formData\n//       );\n//       history.push(\"/\");\n//     } catch (error) {}\n//   };\n//   return (\n//     <React.Fragment>\n//       <ErrorModal error={error} onClear={clearError} />{\" \"}\n//       <form className=\"course-form\" onSubmit={courseMatrialUploadHandler}>\n//         {\" \"}\n//         {isLoading && <LoadingSpinner asOverlay />}{\" \"}\n//         <FileUpload\n//           center\n//           id=\"file\"\n//           onInput={inputHandler}\n//           errorText=\"Please provide a file\"\n//         />{\" \"}\n//         {}{\" \"}\n//         <Button type=\"submit\" disabled={!formState.isValid}>\n//           ADD COURSE MATERIAL{\" \"}\n//         </Button>{\" \"}\n//       </form>{\" \"}\n//     </React.Fragment>\n//   );\n// };\n// export default CourseMaterialUpload;\n\nclass CourseMaterialUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      error: null,\n      formData: null,\n      courseID: null,\n      file: null,\n      fileName: null,\n      fileType: null,\n      uploader: null\n    };\n    this.courseID = useParams().courseID;\n    this.history = useHistory();\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", this.state.file);\n    formData.append(\"course\", this.courseID);\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    this.setState({\n      isLoading: true\n    });\n    axios.post(\"http://localhost:5000/api/courses/upload-course-materials/\" + this.courseID, formData, config).then(res => {\n      this.setState({\n        isLoading: false\n      });\n      this.history.push(\"/\");\n    }).catch(err => {\n      this.setState({\n        isLoading: false\n      });\n      console.log(err);\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      file: e.target.files[0]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.onFileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 16\n      }\n    }, \" Upload \"), \" \"), \" \", this.state.isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n      asOverlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 46\n      }\n    }), \" \");\n  }\n\n}","map":{"version":3,"names":["React","useState","useContext","useHistory","useParams","useHttpClient","Input","Button","FileUpload","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","ErrorModal","LoadingSpinner","axios","CourseMaterialUpload","Component","constructor","props","state","isLoading","error","formData","courseID","file","fileName","fileType","uploader","history","onFormSubmit","bind","onFileChange","e","preventDefault","FormData","append","config","headers","setState","post","then","res","push","catch","err","console","log","onChange","target","files","render"],"sources":["/media/shafaet/F/moodle2/CSE408Project/frontend/src/courses/pages/CourseMaterialUpload.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport FileUpload from \"../../shared/components/FormElements/FileUpload\";\nimport {\n    VALIDATOR_REQUIRE,\n    VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./CourseForm.css\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport axios from \"axios\";\n\n// const CourseMaterialUpload = () => {\n//   const { isLoading, error, sendRequest, clearError } = useHttpClient();\n//   const courseID = useParams().courseID;\n\n//   const [formState, inputHandler] = useForm(\n//     {\n//       file: {\n//         value: null,\n//         isValid: false,\n//       },\n//     },\n//     false\n//   );\n\n//   const history = useHistory();\n\n//   const courseMatrialUploadHandler = async (event) => {\n//     event.preventDefault();\n//     const formData = new FormData();\n//     formData.append(\"file\", formState.inputs.file.value);\n//     formData.append(\"course\", courseID);\n//     // formData.append(\"uploader\", 123);\n//     console.log(formData);\n//     try {\n//       await sendRequest(\n//         `http://localhost:5000/api/courses/upload-course-materials/${courseID}`,\n//         \"POST\",\n//         formData\n//       );\n//       history.push(\"/\");\n//     } catch (error) {}\n//   };\n\n//   return (\n//     <React.Fragment>\n//       <ErrorModal error={error} onClear={clearError} />{\" \"}\n//       <form className=\"course-form\" onSubmit={courseMatrialUploadHandler}>\n//         {\" \"}\n//         {isLoading && <LoadingSpinner asOverlay />}{\" \"}\n//         <FileUpload\n//           center\n//           id=\"file\"\n//           onInput={inputHandler}\n//           errorText=\"Please provide a file\"\n//         />{\" \"}\n//         {}{\" \"}\n//         <Button type=\"submit\" disabled={!formState.isValid}>\n//           ADD COURSE MATERIAL{\" \"}\n//         </Button>{\" \"}\n//       </form>{\" \"}\n//     </React.Fragment>\n//   );\n// };\n\n// export default CourseMaterialUpload;\n\nclass CourseMaterialUpload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            error: null,\n            formData: null,\n            courseID: null,\n            file: null,\n            fileName: null,\n            fileType: null,\n            uploader: null,\n        };\n        this.courseID = useParams().courseID;\n        this.history = useHistory();\n        this.onFormSubmit = this.onFormSubmit.bind(this);\n        this.onFileChange = this.onFileChange.bind(this);\n    }\n    onFormSubmit(e) {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"file\", this.state.file);\n        formData.append(\"course\", this.courseID);\n        const config = {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n        };\n        this.setState({ isLoading: true });\n        axios\n            .post(\n                \"http://localhost:5000/api/courses/upload-course-materials/\" +\n                this.courseID,\n                formData,\n                config\n            )\n            .then((res) => {\n                this.setState({ isLoading: false });\n                this.history.push(\"/\");\n            })\n            .catch((err) => {\n                this.setState({ isLoading: false });\n                console.log(err);\n            });\n    }\n\n    onChange(e) {\n        this.setState({ file: e.target.files[0] });\n    }\n\n    render() {\n        return ( <\n            div >\n            <\n            form onSubmit = { this.onFormSubmit } >\n            <\n            input type = \"file\"\n            onChange = { this.onFileChange }\n            /> <\n            button type = \"submit\" > Upload < /button> <\n            /form> { this.state.isLoading && < LoadingSpinner asOverlay / > } <\n            /div>\n        );\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}