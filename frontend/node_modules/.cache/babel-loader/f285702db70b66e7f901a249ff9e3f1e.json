{"ast":null,"code":"var _jsxFileName = \"/home/istiak/Desktop/408/CSE408Project/frontend/src/shared/components/FormElements/Input.js\";\nimport React, { useReducer, useEffect } from \"react\";\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    case \"TOUCH\":\n      {\n        return { ...state,\n          isTouched: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\"\n    });\n  };\n\n  let element = null;\n\n  switch (props.element) {\n    case \"input\":\n      element = /*#__PURE__*/React.createElement(\"input\", {\n        id: props.id,\n        type: props.type,\n        placeholder: props.placeholder,\n        onChange: changeHandler,\n        onBlur: touchHandler,\n        value: inputState.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      });\n      break;\n\n    case \"textarea\":\n      element = /*#__PURE__*/React.createElement(\"textarea\", {\n        id: props.id,\n        rows: props.rows || 3,\n        onChange: changeHandler,\n        onBlur: touchHandler,\n        value: inputState.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      });\n      break;\n\n    case \"select\":\n      element = /*#__PURE__*/React.createElement(\"select\", {\n        id: props.id,\n        onChange: changeHandler,\n        onBlur: touchHandler,\n        value: inputState.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, props.options.map(option => /*#__PURE__*/React.createElement(\"option\", {\n        key: option.value,\n        value: option.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, option.text)));\n      break;\n\n    default:\n      element = /*#__PURE__*/React.createElement(\"input\", {\n        id: props.id,\n        type: props.type,\n        placeholder: props.placeholder,\n        onChange: changeHandler,\n        onBlur: touchHandler,\n        value: inputState.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      });\n  } // const element =\n  //   props.element === 'input' ? (\n  //     <input\n  //       id={props.id}\n  //       type={props.type}\n  //       placeholder={props.placeholder}\n  //       onChange={changeHandler}\n  //       onBlur={touchHandler}\n  //       value={inputState.value}\n  //     />\n  //   ) : (\n  //     <textarea\n  //       id={props.id}\n  //       rows={props.rows || 3}\n  //       onChange={changeHandler}\n  //       onBlur={touchHandler}\n  //       value={inputState.value}\n  //     />\n  //   );\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && inputState.isTouched && \"form-control--invalid\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, props.label), element, \" \", !inputState.isValid && inputState.isTouched && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 55\n    }\n  }, props.errorText));\n};\n\nexport default Input;","map":{"version":3,"names":["React","useReducer","useEffect","validate","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","inputState","dispatch","initialValue","initialValid","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","rows","options","map","option","text","label","errorText"],"sources":["/home/istiak/Desktop/408/CSE408Project/frontend/src/shared/components/FormElements/Input.js"],"sourcesContent":["import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n  let element = null;\n  switch (props.element) {\n    case \"input\":\n      element = (\n        <input\n          id={props.id}\n          type={props.type}\n          placeholder={props.placeholder}\n          onChange={changeHandler}\n          onBlur={touchHandler}\n          value={inputState.value}\n        />\n      );\n      break;\n    case \"textarea\":\n      element = (\n        <textarea\n          id={props.id}\n          rows={props.rows || 3}\n          onChange={changeHandler}\n          onBlur={touchHandler}\n          value={inputState.value}\n        />\n      );\n      break;\n    case \"select\":\n      element = (\n        <select\n          id={props.id}\n          onChange={changeHandler}\n          onBlur={touchHandler}\n          value={inputState.value}\n        >\n          {props.options.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.text}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      element = (\n        <input\n          id={props.id}\n          type={props.type}\n          placeholder={props.placeholder}\n          onChange={changeHandler}\n          onBlur={touchHandler}\n          value={inputState.value}\n        />\n      );\n  }\n\n  // const element =\n  //   props.element === 'input' ? (\n  //     <input\n  //       id={props.id}\n  //       type={props.type}\n  //       placeholder={props.placeholder}\n  //       onChange={changeHandler}\n  //       onBlur={touchHandler}\n  //       value={inputState.value}\n  //     />\n  //   ) : (\n  //     <textarea\n  //       id={props.id}\n  //       rows={props.rows || 3}\n  //       onChange={changeHandler}\n  //       onBlur={touchHandler}\n  //       value={inputState.value}\n  //     />\n  //   );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element} {/* {element} dite hobe jdi kaj na kore */}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}