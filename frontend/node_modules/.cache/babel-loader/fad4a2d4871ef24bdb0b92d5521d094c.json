{"ast":null,"code":"var _jsxFileName = \"/home/istiak/Desktop/Project 408/Final/CSE408Project/frontend/src/shared/components/FormElements/FileUpload.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport \"./FileUpload.css\";\n\nconst FileUpload = props => {\n  const [file, setFile] = useState(); //   const [previewUrl, setPreviewUrl] = useState();\n\n  const [isValid, setIsValid] = useState(false);\n  const filePickerRef = useRef();\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickFileHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    ref: filePickerRef,\n    style: {\n      display: \"none\"\n    },\n    type: \"file\",\n    accept: \".jpg,.png,.jpeg,.pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.txt, .rtf\",\n    onChange: pickedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: `file-upload ${props.center && \"center\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: pickFileHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"PICK FILE\", \" \"), \" \"), \" \", !isValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }\n  }, \" \", props.errorText, \" \"), \" \");\n};\n\nexport default FileUpload;","map":{"version":3,"names":["React","useRef","useState","useEffect","Button","FileUpload","props","file","setFile","isValid","setIsValid","filePickerRef","pickedHandler","event","pickedFile","fileIsValid","target","files","length","onInput","id","pickFileHandler","current","click","display","center","errorText"],"sources":["/home/istiak/Desktop/Project 408/Final/CSE408Project/frontend/src/shared/components/FormElements/FileUpload.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./FileUpload.css\";\n\nconst FileUpload = (props) => {\n  const [file, setFile] = useState();\n  //   const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickFileHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg,.pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.txt, .rtf\"\n        onChange={pickedHandler}\n      />{\" \"}\n      <div className={`file-upload ${props.center && \"center\"}`}>\n        <Button type=\"button\" onClick={pickFileHandler}>\n          PICK FILE{\" \"}\n        </Button>{\" \"}\n      </div>{\" \"}\n      {!isValid && <p> {props.errorText} </p>}{\" \"}\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAC5B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC,CAD4B,CAE5B;;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;EAEA,MAAMS,aAAa,GAAGV,MAAM,EAA5B;;EAEA,MAAMW,aAAa,GAAIC,KAAD,IAAW;IAC/B,IAAIC,UAAJ;IACA,IAAIC,WAAW,GAAGN,OAAlB;;IACA,IAAII,KAAK,CAACG,MAAN,CAAaC,KAAb,IAAsBJ,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,KAA8B,CAAxD,EAA2D;MACzDJ,UAAU,GAAGD,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;MACAT,OAAO,CAACM,UAAD,CAAP;MACAJ,UAAU,CAAC,IAAD,CAAV;MACAK,WAAW,GAAG,IAAd;IACD,CALD,MAKO;MACLL,UAAU,CAAC,KAAD,CAAV;MACAK,WAAW,GAAG,KAAd;IACD;;IACDT,KAAK,CAACa,OAAN,CAAcb,KAAK,CAACc,EAApB,EAAwBN,UAAxB,EAAoCC,WAApC;EACD,CAbD;;EAeA,MAAMM,eAAe,GAAG,MAAM;IAC5BV,aAAa,CAACW,OAAd,CAAsBC,KAAtB;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,cAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IACE,EAAE,EAAEjB,KAAK,CAACc,EADZ;IAEE,GAAG,EAAET,aAFP;IAGE,KAAK,EAAE;MAAEa,OAAO,EAAE;IAAX,CAHT;IAIE,IAAI,EAAC,MAJP;IAKE,MAAM,EAAC,kEALT;IAME,QAAQ,EAAEZ,aANZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAQK,GARL,eASE;IAAK,SAAS,EAAG,eAAcN,KAAK,CAACmB,MAAN,IAAgB,QAAS,EAAxD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IAAQ,IAAI,EAAC,QAAb;IAAsB,OAAO,EAAEJ,eAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACY,GADZ,CADF,EAGY,GAHZ,CATF,EAaS,GAbT,EAcG,CAACZ,OAAD,iBAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,QAAKH,KAAK,CAACoB,SAAX,MAdf,EAc2C,GAd3C,CADF;AAkBD,CA5CD;;AA8CA,eAAerB,UAAf"},"metadata":{},"sourceType":"module"}