{"ast":null,"code":"var _jsxFileName = \"/home/istiak/Desktop/408/CSE408Project/frontend/src/sessions/pages/NewSession.js\";\nimport React, { useState, useContext } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./SessionForm.css\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nconst NewSession = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [formState, inputHandler] = useForm({\n    sessionID: {\n      value: \"\",\n      isValid: false\n    },\n    startDate: {\n      value: \"\",\n      isValid: false\n    },\n    endDate: {\n      value: \"\",\n      isValid: false\n    } // courses: [\n    //   {\n    //     value: \"\",\n    //     isValid: true,\n    //   },\n    // ],\n\n  }, false);\n\n  const sessionSubmitHandler = async event => {\n    event.preventDefault(); // console.log(formState.inputs); // send this to the backend!\n\n    try {\n      setIsLoading(true);\n      const response = await fetch(\"http://localhost:5000/api/admin/create-session\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sessionID: formState.inputs.sessionID.value,\n          startDate: formState.inputs.startDate.value,\n          endDate: formState.inputs.endDate.value,\n          courses: formState.inputs.courses.value\n        })\n      });\n      const responseData = await response.json();\n\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n\n      console.log(responseData);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message || \"Something went wrong\");\n    }\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  }; // const sessionSubmitHandler = (event) => {\n  //   event.preventDefault();\n  //   console.log(formState.inputs); // send this to the backend!\n  // };\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: errorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"session-form\",\n    onSubmit: sessionSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"sessionID\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Session ID\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid session id.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"startDate\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Start Date\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid start date.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"endDate\",\n    element: \"input\",\n    type: \"text\",\n    label: \"End Date\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid end date.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"ADD SESSION\")));\n};\n\nexport default NewSession;","map":{"version":3,"names":["React","useState","useContext","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","ErrorModal","LoadingSpinner","NewSession","isLoading","setIsLoading","error","setError","formState","inputHandler","sessionID","value","isValid","startDate","endDate","sessionSubmitHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","inputs","courses","responseData","json","ok","Error","message","console","log","errorHandler"],"sources":["/home/istiak/Desktop/408/CSE408Project/frontend/src/sessions/pages/NewSession.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./SessionForm.css\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\n\nconst NewSession = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [formState, inputHandler] = useForm(\n    {\n      sessionID: {\n        value: \"\",\n        isValid: false,\n      },\n      startDate: {\n        value: \"\",\n        isValid: false,\n      },\n      endDate: {\n        value: \"\",\n        isValid: false,\n      },\n      // courses: [\n      //   {\n      //     value: \"\",\n      //     isValid: true,\n      //   },\n      // ],\n    },\n    false\n  );\n\n  const sessionSubmitHandler = async (event) => {\n    event.preventDefault();\n    // console.log(formState.inputs); // send this to the backend!\n    try {\n      setIsLoading(true);\n      const response = await fetch(\n        \"http://localhost:5000/api/admin/create-session\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            sessionID: formState.inputs.sessionID.value,\n            startDate: formState.inputs.startDate.value,\n            endDate: formState.inputs.endDate.value,\n            courses: formState.inputs.courses.value,\n          }),\n        }\n      );\n\n      const responseData = await response.json();\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n      console.log(responseData);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message || \"Something went wrong\");\n    }\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  // const sessionSubmitHandler = (event) => {\n  //   event.preventDefault();\n  //   console.log(formState.inputs); // send this to the backend!\n  // };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={errorHandler} />\n      <form className=\"session-form\" onSubmit={sessionSubmitHandler}>\n        <Input\n          id=\"sessionID\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Session ID\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid session id.\"\n          onInput={inputHandler}\n        />\n\n        <Input\n          id=\"startDate\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Start Date\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid start date.\"\n          onInput={inputHandler}\n        />\n\n        <Input\n          id=\"endDate\"\n          element=\"input\"\n          type=\"text\"\n          label=\"End Date\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid end date.\"\n          onInput={inputHandler}\n        />\n\n        {/* <Input\n          id=\"courses\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Courses \"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid end date.\"\n          onInput={inputHandler}\n        /> */}\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD SESSION\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewSession;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,SACEC,iBADF,EAEEC,mBAFF,QAGO,8BAHP;AAIA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAO,mBAAP;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;;AAEA,MAAMC,UAAU,GAAG,MAAM;EACvB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;EACA,MAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4BT,OAAO,CACvC;IACEU,SAAS,EAAE;MACTC,KAAK,EAAE,EADE;MAETC,OAAO,EAAE;IAFA,CADb;IAKEC,SAAS,EAAE;MACTF,KAAK,EAAE,EADE;MAETC,OAAO,EAAE;IAFA,CALb;IASEE,OAAO,EAAE;MACPH,KAAK,EAAE,EADA;MAEPC,OAAO,EAAE;IAFF,CATX,CAaE;IACA;IACA;IACA;IACA;IACA;;EAlBF,CADuC,EAqBvC,KArBuC,CAAzC;;EAwBA,MAAMG,oBAAoB,GAAG,MAAOC,KAAP,IAAiB;IAC5CA,KAAK,CAACC,cAAN,GAD4C,CAE5C;;IACA,IAAI;MACFZ,YAAY,CAAC,IAAD,CAAZ;MACA,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gDAD0B,EAE1B;QACEC,MAAM,EAAE,MADV;QAEEC,OAAO,EAAE;UACP,gBAAgB;QADT,CAFX;QAKEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBd,SAAS,EAAEF,SAAS,CAACiB,MAAV,CAAiBf,SAAjB,CAA2BC,KADnB;UAEnBE,SAAS,EAAEL,SAAS,CAACiB,MAAV,CAAiBZ,SAAjB,CAA2BF,KAFnB;UAGnBG,OAAO,EAAEN,SAAS,CAACiB,MAAV,CAAiBX,OAAjB,CAAyBH,KAHf;UAInBe,OAAO,EAAElB,SAAS,CAACiB,MAAV,CAAiBC,OAAjB,CAAyBf;QAJf,CAAf;MALR,CAF0B,CAA5B;MAgBA,MAAMgB,YAAY,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAA3B;;MACA,IAAI,CAACV,QAAQ,CAACW,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;MACD;;MACDC,OAAO,CAACC,GAAR,CAAYN,YAAZ;MACAtB,YAAY,CAAC,KAAD,CAAZ;IACD,CAxBD,CAwBE,OAAOC,KAAP,EAAc;MACdD,YAAY,CAAC,KAAD,CAAZ;MACAE,QAAQ,CAACD,KAAK,CAACyB,OAAN,IAAiB,sBAAlB,CAAR;IACD;EACF,CA/BD;;EAiCA,MAAMG,YAAY,GAAG,MAAM;IACzB3B,QAAQ,CAAC,IAAD,CAAR;EACD,CAFD,CA5DuB,CAgEvB;EACA;EACA;EACA;;;EAEA,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,UAAD;IAAY,KAAK,EAAED,KAAnB;IAA0B,OAAO,EAAE4B,YAAnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE;IAAM,SAAS,EAAC,cAAhB;IAA+B,QAAQ,EAAEnB,oBAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD;IACE,EAAE,EAAC,WADL;IAEE,OAAO,EAAC,OAFV;IAGE,IAAI,EAAC,MAHP;IAIE,KAAK,EAAC,YAJR;IAKE,UAAU,EAAE,CAACjB,iBAAiB,EAAlB,CALd;IAME,SAAS,EAAC,kCANZ;IAOE,OAAO,EAAEW,YAPX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAWE,oBAAC,KAAD;IACE,EAAE,EAAC,WADL;IAEE,OAAO,EAAC,OAFV;IAGE,IAAI,EAAC,MAHP;IAIE,KAAK,EAAC,YAJR;IAKE,UAAU,EAAE,CAACX,iBAAiB,EAAlB,CALd;IAME,SAAS,EAAC,kCANZ;IAOE,OAAO,EAAEW,YAPX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAXF,eAqBE,oBAAC,KAAD;IACE,EAAE,EAAC,SADL;IAEE,OAAO,EAAC,OAFV;IAGE,IAAI,EAAC,MAHP;IAIE,KAAK,EAAC,UAJR;IAKE,UAAU,EAAE,CAACX,iBAAiB,EAAlB,CALd;IAME,SAAS,EAAC,gCANZ;IAOE,OAAO,EAAEW,YAPX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EArBF,eAwCE,oBAAC,MAAD;IAAQ,IAAI,EAAC,QAAb;IAAsB,QAAQ,EAAE,CAACD,SAAS,CAACI,OAA3C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBAxCF,CAFF,CADF;AAiDD,CAtHD;;AAwHA,eAAeT,UAAf"},"metadata":{},"sourceType":"module"}